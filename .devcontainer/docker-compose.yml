version: "3.8"

services:
  app:

    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    networks:
    - observability
    environment:
      OTEL_SERVICE_NAME: tour-of-heroes-api
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    ports:
    - "5010:5010"
  
  db:    
    image:  mcr.microsoft.com/azure-sql-edge
    restart: unless-stopped
    environment:
      SA_PASSWORD: P@ssword
      ACCEPT_EULA: Y
    networks:
      - observability
   
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger UI
    command: --query.ui-config=/etc/jaeger/jaeger-ui.json --collector.otlp.enabled=true --prometheus.server-url=http://prometheus:9090 --prometheus.query.support-spanmetrics-connector=true
    environment:      
      METRICS_STORAGE_TYPE: "prometheus"      
      PROMETHEUS_QUERY_NORMALIZE_CALLS: true
      PROMETHEUS_QUERY_NORMALIZE_DURATION: true
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    networks:
      - observability
  
  prometheus:
    image: prom/prometheus   
    ports:
      - "9090:9090"
    networks:
      - observability
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  
  loki:
    image: grafana/loki:latest
    command: -config.file=/mnt/config/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - observability
    volumes:
      - ./loki-config.yml:/mnt/config/loki-config.yml
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini     
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    networks:
      - observability  

  # https://opentelemetry.io/docs/collector/installation/
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    command: --config /etc/otelcol/otel-collector-config.yml
    volumes:
      - ./otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml
    ports:
     - "4317:4317"
    networks:
      - observability

  fake-calls:
    image: alpine/curl:latest
    entrypoint:
      - /bin/sh
      - -c
      - |
        sleep 5
        while true; do
          curl -s "http://app:5001/api/hero" || true         
          sleep 0.5
        done
    networks:
      - observability
    depends_on:
      - app

networks:
  observability: